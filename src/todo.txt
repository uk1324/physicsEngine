Editor
Evaluating expressions in ImGui inputs. Could also include access to variables.
Sequencer system for cutscenes. Triggers, Camera panning action
The scene hierarchy should be a seperate part of the file format. Entites should still be stored in arrays.
This makes it easier to remove it from the final file and also import it is easier.
Chain editor. Half spaces or lines?
Proceduraly generating textures under the chain.

Modifiers
In the editor could store a map<Entity, Modifier>.

Modifiers a just functions that are updated every frame and get the entity as the input.
They could be used to make motors(set velocity of something). Could also integrate a scripting language for making more complicated scripts.

Maybe add a unit type system for the langage. mass * length = velocity

To generatae angles of a convex poylgon could generate a sum of angles that are less than 90 and then normalize it.
These ides wouldn't work, but are cool. Generating a point on a sphere. Angles or generate on cube and then normalize.

.data
Store an array of structs with enum + index that specifes the order in which thing code should be generated.

custom editor
scaling
saving

Custom editor for inputing offests of the anchor points of a joint

Scaling the bodies. If the are multiple entites selected use uniform scaling.
If there is one box allow for non uniform scaling.

Maybe make a immediate mode style interface for the editor.
if (Circle(&pos)) {

}

Create a scoped std::ostream that writes tabs on a newline. 

Make things like this not happen.
	result["staticWorldSpaceAnchorOrBodyAnchorB"] = 	if (const auto value = std::get_if<Vec2>(&staticWorldSpaceAnchorOrBodyAnchorB)){
		{ { "type", Vec2 }, 
		{ { "value", { { "x", staticWorldSpaceAnchorOrBodyAnchorB.x }, { "y", staticWorldSpaceAnchorOrBodyAnchorB.y } } }
	 }
;

Snap the passed cursor pos to important features like corners

Have a menu that allows saving sublevels something similar to prefabs in unity. And maybe make creating things like shapes only be a tab in the menu for those things.

Maybe make a menu appear when two entities are selected that shows that they can be connected with a joint. Maybe show the menu only after something is held down for some amount of time.